image: docker:stable

variables:
  DOCKER_DRIVER: overlay2
  CONTAINER_IMG: registry.gitlab.com/jkwebgmbh/haus-eins-frontend/frontend
  KUBERNETES_VERSION: 1.9.7
  HELM_VERSION: 2.12.3

services:
  - docker:dind

stages:
  - build
  - production

build-project:
  stage: build
  script:
    - docker build -t $CONTAINER_IMG:latest -t $CONTAINER_IMG:$CI_BUILD_REF -f deploy/docker/Dockerfile .
    - docker push $CONTAINER_IMG:$CI_BUILD_REF
    - docker push $CONTAINER_IMG:latest
  only:
    refs:
      - master

production:
  stage: production
  environment: 
    name: production
    url: https://frontend.hauseins.jkweb.li
  script:
    - install_dependencies
    - install_helm
    - deploy
  only:
    refs:
      - master
    kubernetes: active

# ---------------------------------------------------------------------------
.auto_devops: &auto_devops | 
  function deploy() {
    helm upgrade --install \
      --wait \
      --set image.tag="$CI_BUILD_REF" \
      "hauseins-frontend-prod" \
      deploy/hauseins-frontend
  }

  function install_dependencies() {
    apk add -U openssl curl tar gzip bash ca-certificates git
    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
    wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk
    apk add glibc-2.28-r0.apk
    rm glibc-2.28-r0.apk

    curl "https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz" | tar zx
    mv linux-amd64/helm /usr/bin/
    helm version --client

    curl -L -o /usr/bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl"
    chmod +x /usr/bin/kubectl
    kubectl version --client
  }

  function install_helm() {
    helm init --upgrade --service-account tiller
  }

before_script:
  - *auto_devops
  - docker info
  - echo $CI_BUILD_REF
  - echo $CI_PROJECT_DIR
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
